[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\kamilai\AppData\Local\Temp\idea4.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\kamilai\AppData\Local\Temp\idea4.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.6 (Oracle Corporation Java 11.0.8)
[debug]       Load.loadUnit: plugins took 142.1248ms
[debug]       Load.loadUnit: defsScala took 0.3189ms
[debug] [Loading] Scanning directory C:\Users\kamilai\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\kamilai\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.0754 ms
[debug]           Load.resolveProject(global-plugins) took 48.863ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\kamilai\.sbt\1.0\plugins, plugins: List(<none>))) took 98.9928ms
[debug] [Loading] Done in C:\Users\kamilai\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 120.408ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2951ms
[debug]     Load.loadUnit(file:/C:/Users/kamilai/.sbt/1.0/plugins/, ...) took 274.7936ms
[debug]   Load.apply: load took 597.3772ms
[debug]   Load.apply: resolveProjects took 10.5534ms
[debug]   Load.apply: finalTransforms took 98.6706ms
[debug]   Load.apply: config.delegates took 11.6079ms
[debug]   Load.apply: Def.make(settings)... took 2646.6746ms
[debug]   Load.apply: structureIndex took 160.6653ms
[debug]   Load.apply: mkStreams took 3.1857ms
[info] loading global plugins from C:\Users\kamilai\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6466.6729ms
[debug]           Load.loadUnit: plugins took 63.6618ms
[debug]           Load.loadUnit: defsScala took 0.0075ms
[debug] [Loading] Scanning directory C:\RMS\akka-grpc-quickstart-scala\project
[debug]             Load.loadUnit: mkEval took 0.8331ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\RMS\akka-grpc-quickstart-scala\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.4939 ms
[info] loading settings for project akka-grpc-quickstart-scala-build from plugins.sbt,idea4.sbt ...
[debug]               Load.resolveProject(akka-grpc-quickstart-scala-build) took 80.8517ms
[debug]             Load.loadTransitive: finalizeProject(Project(id akka-grpc-quickstart-scala-build, base: C:\RMS\akka-grpc-quickstart-scala\project, plugins: List(<none>))) took 85.5253ms
[debug] [Loading] Done in C:\RMS\akka-grpc-quickstart-scala\project, returning: (akka-grpc-quickstart-scala-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4600.3019ms
[debug]           Load.loadUnit: cleanEvalClasses took 15.1908ms
[debug]         Load.loadUnit(file:/C:/RMS/akka-grpc-quickstart-scala/project/, ...) took 4681.6483ms
[debug]       Load.apply: load took 4685.6309ms
[debug]       Load.apply: resolveProjects took 0.2853ms
[debug]       Load.apply: finalTransforms took 19.594ms
[debug]       Load.apply: config.delegates took 0.9006ms
[debug]       Load.apply: Def.make(settings)... took 158.8475ms
[debug]       Load.apply: structureIndex took 59.6756ms
[debug]       Load.apply: mkStreams took 0.0037ms
[info] loading project definition from C:\RMS\akka-grpc-quickstart-scala\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 7951.6309ms
[debug]     Load.loadUnit: defsScala took 0.0041ms
[debug] [Loading] Scanning directory C:\RMS\akka-grpc-quickstart-scala
[debug]       Load.loadUnit: mkEval took 0.7299ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\RMS\akka-grpc-quickstart-scala, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(akka.grpc.sbt.AkkaGrpcPlugin), Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(com.lightbend.sbt.javaagent.JavaAgentPackaging$NoPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(akka.grpc.sbt.AkkaGrpcPlugin),Set(Atom(sbtprotoc.ProtocPlugin))), Clause(Atom(com.lightbend.sbt.javaagent.JavaAgent),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(com.lightbend.sbt.javaagent.JavaAgentPackaging),Set(Atom(com.lightbend.sbt.javaagent.JavaAgent))), Clause(Atom(com.lightbend.sbt.javaagent.JavaAgentPackaging),Set(Atom(com.lightbend.sbt.javaagent.JavaAgentPackaging$NoPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbtprotoc.ProtocPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(And(Set(Atom(com.lightbend.sbt.javaagent.JavaAgent), Atom(com.lightbend.sbt.javaagent.JavaAgentPackaging$NoPlugin))),Set(Atom(com.lightbend.sbt.javaagent.JavaAgentPackaging))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtprotoc.ProtocPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.portablescala.sbtplatformdeps.PlatformDepsPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,akka.grpc.sbt.AkkaGrpcPlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbtprotoc.ProtocPlugin,sbt.plugins.JvmPlugin,org.portablescala.sbtplatformdeps.PlatformDepsPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 11.7509 ms
[info] loading settings for project akka-grpc-quickstart-scala from build.sbt ...
[debug]         Load.resolveProject(akka-grpc-quickstart-scala) took 252.4213ms
[debug]       Load.loadTransitive: finalizeProject(Project(id akka-grpc-quickstart-scala, base: C:\RMS\akka-grpc-quickstart-scala, plugins: List(<none>))) took 273.185ms
[debug] [Loading] Done in C:\RMS\akka-grpc-quickstart-scala, returning: (akka-grpc-quickstart-scala)
[debug]     Load.loadUnit: loadedProjectsRaw took 3826.4138ms
[debug]     Load.loadUnit: cleanEvalClasses took 256.4781ms
[debug]   Load.loadUnit(file:/C:/RMS/akka-grpc-quickstart-scala/, ...) took 12035.6299ms
[debug] Load.apply: load took 12039.7527ms
[debug] Load.apply: resolveProjects took 0.187ms
[debug] Load.apply: finalTransforms took 419.5809ms
[debug] Load.apply: config.delegates took 0.8025ms
[debug] Load.apply: Def.make(settings)... took 308.1076ms
[debug] Load.apply: structureIndex took 50.6586ms
[debug] Load.apply: mkStreams took 0.0035ms
[info] set current project to akka-grpc-quickstart-scala (in build file:/C:/RMS/akka-grpc-quickstart-scala/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 58135 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 58135, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to akka-grpc-quickstart-scala (in build file:/C:/RMS/akka-grpc-quickstart-scala/)
[debug] > Exec(idea-shell, None, None)
