
// Generated by Akka gRPC. DO NOT EDIT.
package com.example.helloworld

/**
 * The greeting service definition.
 */
trait GreeterService {
  
  /**
   * Sends a greeting
   */
  def sayHello(in: com.example.helloworld.HelloRequest): scala.concurrent.Future[com.example.helloworld.HelloReply]
  
  /**
   * #service-request-reply
   * #service-stream
   * The stream of incoming HelloRequest messages are
   * sent out as corresponding HelloReply. From
   * all clients to all clients, like a chat room.
   */
  def sayHelloToAll(in: akka.stream.scaladsl.Source[com.example.helloworld.HelloRequest, akka.NotUsed]): akka.stream.scaladsl.Source[com.example.helloworld.HelloReply, akka.NotUsed]
  
}

object GreeterService extends akka.grpc.ServiceDescription {
  val name = "GreeterService"

  val descriptor: com.google.protobuf.Descriptors.FileDescriptor =
    com.example.helloworld.HelloworldProto.javaDescriptor;

  object Serializers {
    import akka.grpc.scaladsl.ScalapbProtobufSerializer
    
    val HelloRequestSerializer = new ScalapbProtobufSerializer(com.example.helloworld.HelloRequest.messageCompanion)
    
    val HelloReplySerializer = new ScalapbProtobufSerializer(com.example.helloworld.HelloReply.messageCompanion)
    
  }
}
